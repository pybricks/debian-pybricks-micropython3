// SPDX-License-Identifier: MIT
// Copyright (c) 2023 The Pybricks Authors

/**
 * @addtogroup RandomDriver Driver: Random number generator
 * @{
 */

#ifndef _PBDRV_RANDOM_H_
#define _PBDRV_RANDOM_H_

#include <stdint.h>

#include <pbdrv/config.h>
#include <pbio/error.h>

#if PBDRV_CONFIG_RANDOM

/**
 * Gets a random number generated by the LSB of an analog input.
 * @param [out] random  The random number.
 * @return              ::PBIO_SUCCESS on success, ::PBIO_ERROR_AGAIN if has
 *                      not been long enough since the last read to generate
 *                      a new number, ::PBIO_ERROR_NOT_SUPPORTED if the driver
 *                      is disabled.
 */
pbio_error_t pbdrv_random_get(uint32_t *random);

#else // PBDRV_CONFIG_RANDOM

static inline pbio_error_t pbdrv_random_get(uint32_t *random) {
    *random = 0;
    return PBIO_ERROR_NOT_SUPPORTED;
}

#endif // PBDRV_CONFIG_RANDOM

#endif /* _PBDRV_RANDOM_H_ */

/** @} */
